# Project root path from (to project)
Prdir:=$(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))

Headers=${Prdir}/Headers
Sources=${Prdir}/Sources

PCAP.Headers=${Prdir}/PCAP/Headers
PCAP.Sources=${Prdir}/PCAP/Sources

# Setting of the general compiled grammer
## The Compiler, library, level of the compiler optimization, detected information, WALL and message
CC=g++
STD=-std=c++11
CMPOPT=-O0
DETAILINFO=-g0
WALL=-Wall
FMSG=-fmessage-length=0 -pthread
CFLAGS=
LDFLAGS=
LDLIBS=-lpcap

## Project execution's name
PjN:= $(word $(words $(subst /, ,${Prdir})), $(subst /, ,${Prdir}))

# Make's Processes
.Suffixs: .c .h .cpp .hpp

.Phony: all
all: ${Prdir}/${PjN}
	@sudo chown root:root ${Prdir}/${PjN}
	@sudo chmod 4755 ${Prdir}/${PjN}
	@make run

.Phony: build
build: ${Prdir}/${PjN}/build

.Phony: clean
clean:
	@clear
	@rm -rf ${Prdir}/*.o
	@rm -rf ${Prdir}/*/*.o
	@rm -rf ${Prdir}/*/*/*.o
	@rm -rf ${Prdir}/*/*/*.o
	@sudo rm -rf ${Prdir}/${PjN}

.Phony: cmakeClean
cmakeClean:
	@clear
	@rm -rf ${Prdir}/build/*


##----------------------------------------------------------------------
## Nick editted manually
## ---------------------------------------------------------------------
##dbsecure ALL=NOPASSWD: /bin/rm -rf /home/dbsecure/trafficMonitor/trafficMonitor
.Phony: run
run:	
	${Prdir}/${PjN}

##================================================================
# Build libraries
${Prdir}/${PjN}/build : 
			

# Create a application
${Prdir}/${PjN}: 	${Prdir}/Main.o \
					${Sources}/MainCaller.o \
					${PCAP.Headers}/LinuxPCAP.o

	${CC} ${STD} ${CMPOPT} ${DETAILINFO} ${WALL} ${FMSG} -o ${Prdir}/${PjN} ${Prdir}/Main.o \
	${Sources}/MainCaller.o \
	${PCAP.Sources}/LinuxPCAP.o \
	${LDLIBS}

# Main
${Prdir}/Main.o:	${Headers}/MainCaller.hpp ${Prdir}/Main.cpp
	${CC} ${STD} ${CMPOPT} ${DETAILINFO} ${WALL} ${Prdir}/Main.cpp -c ${FMSG} -o ${Prdir}/Main.o

# MainCaller
${Sources}/MainCaller.o:	${Headers}/MainCaller.hpp ${Sources}/MainCaller.cpp
	${CC} ${STD} ${CMPOPT} ${DETAILINFO} ${WALL} ${Sources}/MainCaller.cpp -c ${FMSG} -o ${Sources}/MainCaller.o


# PCAP.LinuxPCAP
${PCAP.Headers}/LinuxPCAP.o:	${PCAP.Headers}/PCAPPrototype.hpp ${PCAP.Headers}/LinuxPCAP.hpp ${PCAP.Sources}/LinuxPCAP.cpp
	${CC} ${STD} ${CMPOPT} ${DETAILINFO} ${WALL} ${PCAP.Sources}/LinuxPCAP.cpp -c ${FMSG} -o ${PCAP.Sources}/LinuxPCAP.o